name: Docker Build and Publish

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - name: Check out the codebase
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        python -c "import sys; print(sys.version)"
        python -m pip install --upgrade pip
        pip install bandit flake8 pytest ruff
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint Python with flake8
      run: |
        grep -rl '^#!/.*py' | xargs -n1 flake8 --extend-ignore=E501

    - name: Lint with ruff
      run: |
        ruff check . --ignore E501

    - name: Python best practices with Bandit
      run: |
        bandit -r .

    - name: Lint Dockerfile with Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        failure-threshold: error
        ignore: DL3008,DL3018
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta ghcr
        id: meta-ghcr
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Docker meta DockerHub
        id: meta-dockerhub
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=raw,value=latest,enable={{is_default_branch}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push ghcr
        uses: docker/build-push-action@v4
        with:
          context: .
          # Due to build time, only building the one currently needed.
          # If needed, we can add more platforms when requested.
          platforms: "linux/amd64"
          # Do not push pull requests
          #push: ${{ github.event_name != 'pull_request' }}
          # Push pull requests so they can be tested
          push: true
          tags: ${{ steps.meta-ghcr.outputs.tags }}
          labels: ${{ steps.meta-ghcr.outputs.labels }}
      -
        name: Build and push DockerHub
        uses: docker/build-push-action@v4
        if: github.event_name != 'pull_request'
        with:
          context: .
          # Due to build time, only building the one currently needed.
          # If needed, we can add more platforms when requested.
          platforms: "linux/amd64"
          # Do not push pull requests
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-dockerhub.outputs.tags }}
          labels: ${{ steps.meta-dockerhub.outputs.labels }}
      -
        name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        if: github.event_name != 'pull_request'
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKERHUB_PASSWORD }}
        with:
          destination_container_repo: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          provider: dockerhub
          short_description: ${{ github.event.repository.name }}
          readme_file: 'README.md'
